{# @var policy \EzSystems\RepositoryForms\Data\Role\PolicyCreateData|\EzSystems\RepositoryForms\Data\Role\PolicyUpdateData #}
{% extends "eZPlatformUIBundle::pjax_admin.html.twig" %}

{% trans_default_domain "role" %}

{% set editTitle = policy.new ? "role.policy.create.title"|trans() : "role.policy.edit.title"|trans({"%policy%": policy.module ~ "/" ~ policy.function}) %}

{% block title %}
    {{ editTitle }}
{% endblock %}

{% block header_breadcrumbs %}
    {% set breadcrumb_items = [
        {link: path('admin_dashboard'), label: 'dashboard.title'|trans({}, 'dashboard')},
        {link: path('admin_role'), label: 'role.dashboard_title'|trans},
        {link: null, label: policy.roleDraft.identifier},
        {link: '', label: editTitle}
    ] %}

    {{ parent() }}
{% endblock %}

{% block header_title %}
    <h1 class="ez-page-header-name">
        {{ ez_ui_icon('roles') }}
        {{ editTitle }}
    </h1>
{% endblock %}

{% block content %}
    <section class="ez-serverside-content">
        {{ form_start(form, {'action': actionUrl, "attr": {"class": "pure-form pure-form-aligned"}}) }}
            {{ form_errors(form) }}

            <fieldset>
                <div>
                    {{ form_label(form.moduleFunction) }}
                    {{ form_errors(form.moduleFunction) }}
                    {{ form_widget(form.moduleFunction, {"disabled": not policy.new}) }}
                </div>
            </fieldset>

        {# form.limitationsData doesn't exist yet when creating a new policy draft. #}
        {% if form.limitationsData is defined %}
            <fieldset>
                <legend>{{ form_label(form.limitationsData) }}</legend>
                {% for limitationForm in form.limitationsData %}
                    <div>
                        {{ include(limitationForm.vars.template, {form: limitationForm}, with_context = false) }}
                    </div>
                {% endfor %}
            </fieldset>
        {% endif %}

            <div class="pure-controls">
                {{ form_widget(form.removeDraft, {"attr": {"class": "ez-button ez-button-negative", "formnovalidate": "formnovalidate"}}) }}
                {% if form.saveAndAddLimitation is defined %}
                    {{ form_widget(form.saveAndAddLimitation, {"attr": {"class": "ez-button ez-button-secondary"}}) }}
                {% endif %}
                {{ form_widget(form.savePolicy, {"attr": {"class": "ez-button ez-button-primary"}}) }}
            </div>

        {{ form_end(form) }}
    </section>
{% endblock %}
